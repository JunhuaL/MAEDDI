Namespace(configfile='./configs/TWOSIDES/molconf/4_molconf_allcls_RGIN.yml')
{'dataset': 'TWOSIDES', 'task': 'binary', 'category': 'DDI', 'entry1_file': './dataset/TWOSIDES/drug/processed/data.pt', 'entry2_file': './dataset/TWOSIDES/drug/processed/data.pt', 'entry1_seq_file': './dataset/TWOSIDES/drug/drug.csv', 'pair_file': './dataset/TWOSIDES/binary_1vs1/entry_pairs.csv', 'label_file': './dataset/TWOSIDES/binary_1vs1/pair_labels.csv', 'save_folder': './output/mol_conf/RGIN/TWOSIDES/binary_1vs1/all_cluster/', 'split_strategy': 'sample_from_all_clusters', 'gconv_ckpt': './model_checkpoints/molconf_molconf_RGIN_epoch_20_layers_4_random/last.ckpt', 'lin_eval': False, 'model_type': 'deepdrug', 'gpus': 0, 'num_out_dim': 1, 'n_layers': 4, 'n_confs': 0, 'g_conv': 'RGIN', 'lr': 0.0001}
<class 'DeepGCN.RGINConv'>
print parameters:
{
  "earlystopping_tracking": "val_epoch_F1",
  "entry1_data_folder": "./dataset/TWOSIDES/drug",
  "entry1_seq_file": "./dataset/TWOSIDES/drug/drug.csv",
  "entry2_data_folder": "./dataset/TWOSIDES/drug",
  "entry2_seq_file": null,
  "entry_pairs_file": "./dataset/TWOSIDES/binary_1vs1/entry_pairs.csv",
  "gpus": 0,
  "model_type": "deepdrug",
  "pair_labels_file": "./dataset/TWOSIDES/binary_1vs1/pair_labels.csv",
  "save_folder": "./output/mol_conf/RGIN/TWOSIDES/binary_1vs1/all_cluster/",
  "scheduler_ReduceLROnPlateau_tracking": "F1",
  "split_strat": "sample_from_all_clusters",
  "task_type": "binary",
  "y_pred_file": "./output/mol_conf/RGIN/TWOSIDES/binary_1vs1/all_cluster/test_pred.csv",
  "y_transfrom_func": null,
  "y_true_file": "./output/mol_conf/RGIN/TWOSIDES/binary_1vs1/all_cluster/test_true.csv"
}
DeepDrug(
  (gconv1): DeeperGCN(
    (node_encoder): Sequential(
      (0): Linear(in_features=121, out_features=128, bias=True)
      (1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (gcn_blocks): ModuleList(
      (0): ModuleList(
        (0): DeepGCNLayerV2(block=res+)
        (1): DeepGCNLayerV2(block=res+)
        (2): DeepGCNLayerV2(block=res+)
        (3): DeepGCNLayerV2(block=res+)
      )
    )
    (edge_encoder): Sequential(
      (0): Linear(in_features=11, out_features=128, bias=True)
      (1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
  )
  (gconv2): DeeperGCN(
    (node_encoder): Sequential(
      (0): Linear(in_features=121, out_features=128, bias=True)
      (1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (gcn_blocks): ModuleList(
      (0): ModuleList(
        (0): DeepGCNLayerV2(block=res+)
        (1): DeepGCNLayerV2(block=res+)
        (2): DeepGCNLayerV2(block=res+)
        (3): DeepGCNLayerV2(block=res+)
      )
    )
    (edge_encoder): Sequential(
      (0): Linear(in_features=11, out_features=128, bias=True)
      (1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
  )
  (global_fc_nn): Sequential(
    (0): Linear(in_features=256, out_features=128, bias=True)
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Dropout(p=0.2, inplace=False)
    (3): ReLU()
    (4): Linear(in_features=128, out_features=32, bias=True)
    (5): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Dropout(p=0.2, inplace=False)
    (7): ReLU()
  )
  (fc2): Linear(in_features=32, out_features=1, bias=True)
)
MolConfModel(
  (mol_encoder): DeeperGCN(
    (node_encoder): Sequential(
      (0): Linear(in_features=121, out_features=128, bias=True)
      (1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (gcn_blocks): ModuleList(
      (0): ModuleList(
        (0): DeepGCNLayerV2(block=res+)
        (1): DeepGCNLayerV2(block=res+)
        (2): DeepGCNLayerV2(block=res+)
        (3): DeepGCNLayerV2(block=res+)
      )
    )
    (edge_encoder): Sequential(
      (0): Linear(in_features=11, out_features=128, bias=True)
      (1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
  )
  (conf_encoder): DeeperGCN(
    (node_encoder): Sequential(
      (0): Linear(in_features=14, out_features=128, bias=True)
      (1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (gcn_blocks): ModuleList(
      (0): ModuleList(
        (0): DeepGCNLayerV2(block=res+)
        (1): DeepGCNLayerV2(block=res+)
        (2): DeepGCNLayerV2(block=res+)
        (3): DeepGCNLayerV2(block=res+)
      )
    )
    (edge_encoder): Sequential(
      (0): Linear(in_features=6, out_features=128, bias=True)
      (1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
  )
  (mol_lin): Linear(in_features=128, out_features=128, bias=True)
  (conf_lin): Linear(in_features=128, out_features=128, bias=True)
  (out_lin): Sequential(
    (0): Linear(in_features=128, out_features=128, bias=True)
    (1): ReLU(inplace=True)
    (2): Linear(in_features=128, out_features=64, bias=True)
  )
)
MolConfModel(
  (mol_encoder): DeeperGCN(
    (node_encoder): Sequential(
      (0): Linear(in_features=121, out_features=128, bias=True)
      (1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (gcn_blocks): ModuleList(
      (0): ModuleList(
        (0): DeepGCNLayerV2(block=res+)
        (1): DeepGCNLayerV2(block=res+)
        (2): DeepGCNLayerV2(block=res+)
        (3): DeepGCNLayerV2(block=res+)
      )
    )
    (edge_encoder): Sequential(
      (0): Linear(in_features=11, out_features=128, bias=True)
      (1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
  )
  (conf_encoder): DeeperGCN(
    (node_encoder): Sequential(
      (0): Linear(in_features=14, out_features=128, bias=True)
      (1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (gcn_blocks): ModuleList(
      (0): ModuleList(
        (0): DeepGCNLayerV2(block=res+)
        (1): DeepGCNLayerV2(block=res+)
        (2): DeepGCNLayerV2(block=res+)
        (3): DeepGCNLayerV2(block=res+)
      )
    )
    (edge_encoder): Sequential(
      (0): Linear(in_features=6, out_features=128, bias=True)
      (1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
  )
  (mol_lin): Linear(in_features=128, out_features=128, bias=True)
  (conf_lin): Linear(in_features=128, out_features=128, bias=True)
  (out_lin): Sequential(
    (0): Linear(in_features=128, out_features=128, bias=True)
    (1): ReLU(inplace=True)
    (2): Linear(in_features=128, out_features=64, bias=True)
  )
)
preparing dataset...
loading processed data...
add degrees as node features for each sample...
loading processed data...
add degrees as node features for each sample...
can not find cv_file,  sample_from_all_clusters ...
0.6081747548374546
0.13706216887322492
0.25476307628932043
in val dataloader...

val:Ep0000|| F1: 0.012,auROC nan,auPRC: 1.000
in train dataloader...

val:Ep0000|| F1: 0.638,auROC 0.751,auPRC: 0.777

trn:Ep0000|| F1: 0.675,auROC 0.742,auPRC: 0.762

val:Ep0001|| F1: 0.716,auROC 0.785,auPRC: 0.813

trn:Ep0001|| F1: 0.769,auROC 0.827,auPRC: 0.847

val:Ep0002|| F1: 0.741,auROC 0.815,auPRC: 0.840

trn:Ep0002|| F1: 0.810,auROC 0.872,auPRC: 0.893

val:Ep0003|| F1: 0.737,auROC 0.832,auPRC: 0.863

trn:Ep0003|| F1: 0.838,auROC 0.903,auPRC: 0.923

val:Ep0004|| F1: 0.749,auROC 0.822,auPRC: 0.849

trn:Ep0004|| F1: 0.860,auROC 0.924,auPRC: 0.941

val:Ep0005|| F1: 0.754,auROC 0.818,auPRC: 0.835

trn:Ep0005|| F1: 0.876,auROC 0.938,auPRC: 0.952

val:Ep0006|| F1: 0.782,auROC 0.839,auPRC: 0.869

trn:Ep0006|| F1: 0.887,auROC 0.947,auPRC: 0.960

val:Ep0007|| F1: 0.786,auROC 0.842,auPRC: 0.868

trn:Ep0007|| F1: 0.898,auROC 0.954,auPRC: 0.965

val:Ep0008|| F1: 0.761,auROC 0.834,auPRC: 0.870

trn:Ep0008|| F1: 0.904,auROC 0.959,auPRC: 0.969

val:Ep0009|| F1: 0.744,auROC 0.846,auPRC: 0.871

trn:Ep0009|| F1: 0.909,auROC 0.962,auPRC: 0.971

val:Ep0010|| F1: 0.769,auROC 0.843,auPRC: 0.878

trn:Ep0010|| F1: 0.913,auROC 0.965,auPRC: 0.973

val:Ep0011|| F1: 0.777,auROC 0.848,auPRC: 0.870

trn:Ep0011|| F1: 0.915,auROC 0.966,auPRC: 0.975

val:Ep0012|| F1: 0.799,auROC 0.863,auPRC: 0.886

trn:Ep0012|| F1: 0.919,auROC 0.969,auPRC: 0.977

val:Ep0013|| F1: 0.802,auROC 0.859,auPRC: 0.888

trn:Ep0013|| F1: 0.921,auROC 0.970,auPRC: 0.978

val:Ep0014|| F1: 0.797,auROC 0.862,auPRC: 0.880

trn:Ep0014|| F1: 0.924,auROC 0.971,auPRC: 0.978

val:Ep0015|| F1: 0.800,auROC 0.860,auPRC: 0.886

trn:Ep0015|| F1: 0.925,auROC 0.972,auPRC: 0.979

val:Ep0016|| F1: 0.792,auROC 0.854,auPRC: 0.878

trn:Ep0016|| F1: 0.926,auROC 0.973,auPRC: 0.980

val:Ep0017|| F1: 0.760,auROC 0.847,auPRC: 0.878

trn:Ep0017|| F1: 0.929,auROC 0.975,auPRC: 0.981

val:Ep0018|| F1: 0.806,auROC 0.864,auPRC: 0.893

trn:Ep0018|| F1: 0.928,auROC 0.975,auPRC: 0.981

val:Ep0019|| F1: 0.793,auROC 0.852,auPRC: 0.883

trn:Ep0019|| F1: 0.930,auROC 0.975,auPRC: 0.982

val:Ep0020|| F1: 0.773,auROC 0.856,auPRC: 0.883

trn:Ep0020|| F1: 0.931,auROC 0.977,auPRC: 0.982

val:Ep0021|| F1: 0.781,auROC 0.862,auPRC: 0.884

trn:Ep0021|| F1: 0.931,auROC 0.976,auPRC: 0.982

val:Ep0022|| F1: 0.801,auROC 0.862,auPRC: 0.891

trn:Ep0022|| F1: 0.932,auROC 0.977,auPRC: 0.983

val:Ep0023|| F1: 0.797,auROC 0.862,auPRC: 0.891

trn:Ep0023|| F1: 0.934,auROC 0.978,auPRC: 0.983

val:Ep0024|| F1: 0.799,auROC 0.859,auPRC: 0.888

trn:Ep0024|| F1: 0.933,auROC 0.978,auPRC: 0.983

val:Ep0025|| F1: 0.802,auROC 0.858,auPRC: 0.890

trn:Ep0025|| F1: 0.934,auROC 0.978,auPRC: 0.984

val:Ep0026|| F1: 0.791,auROC 0.863,auPRC: 0.895

trn:Ep0026|| F1: 0.934,auROC 0.979,auPRC: 0.984

val:Ep0027|| F1: 0.799,auROC 0.859,auPRC: 0.889
Epoch    29: reducing learning rate of group 0 to 1.0000e-05.

trn:Ep0027|| F1: 0.935,auROC 0.979,auPRC: 0.985

val:Ep0028|| F1: 0.803,auROC 0.864,auPRC: 0.893
loading best weight in C:\Users\junhu\Desktop\Dissertation\MAEDDI\output\mol_conf\RGIN\TWOSIDES\binary_1vs1\all_cluster\models\epoch=18-step=3952.ckpt ...
DeepDrug(
  (gconv1): DeeperGCN(
    (node_encoder): Sequential(
      (0): Linear(in_features=121, out_features=128, bias=True)
      (1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (gcn_blocks): ModuleList(
      (0): ModuleList(
        (0): DeepGCNLayerV2(block=res+)
        (1): DeepGCNLayerV2(block=res+)
        (2): DeepGCNLayerV2(block=res+)
        (3): DeepGCNLayerV2(block=res+)
      )
    )
    (edge_encoder): Sequential(
      (0): Linear(in_features=11, out_features=128, bias=True)
      (1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
  )
  (gconv2): DeeperGCN(
    (node_encoder): Sequential(
      (0): Linear(in_features=121, out_features=128, bias=True)
      (1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (gcn_blocks): ModuleList(
      (0): ModuleList(
        (0): DeepGCNLayerV2(block=res+)
        (1): DeepGCNLayerV2(block=res+)
        (2): DeepGCNLayerV2(block=res+)
        (3): DeepGCNLayerV2(block=res+)
      )
    )
    (edge_encoder): Sequential(
      (0): Linear(in_features=11, out_features=128, bias=True)
      (1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
  )
  (global_fc_nn): Sequential(
    (0): Linear(in_features=256, out_features=128, bias=True)
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Dropout(p=0.2, inplace=False)
    (3): ReLU()
    (4): Linear(in_features=128, out_features=32, bias=True)
    (5): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Dropout(p=0.2, inplace=False)
    (7): ReLU()
  )
  (fc2): Linear(in_features=32, out_features=1, bias=True)
)
in test dataloader...

tst:Ep0029|| F1: 0.791,auROC 0.861,auPRC: 0.870
------------------------------------------------------------------------------------------------------------------------
       Test metric             DataLoader 0
------------------------------------------------------------------------------------------------------------------------
        test_loss            0.578044056892395
------------------------------------------------------------------------------------------------------------------------
in test dataloader...
save prediction completed.
