Namespace(configfile='./configs/TWOSIDES/molconf/4_molconf_allcls_RGCN.yml')
{'dataset': 'TWOSIDES', 'task': 'binary', 'category': 'DDI', 'entry1_file': './dataset/TWOSIDES/drug/processed/data.pt', 'entry2_file': './dataset/TWOSIDES/drug/processed/data.pt', 'entry1_seq_file': './dataset/TWOSIDES/drug/drug.csv', 'pair_file': './dataset/TWOSIDES/binary_1vs1/entry_pairs.csv', 'label_file': './dataset/TWOSIDES/binary_1vs1/pair_labels.csv', 'save_folder': './output/mol_conf/RGCN/TWOSIDES/binary_1vs1/all_cluster/', 'split_strategy': 'sample_from_all_clusters', 'gconv_ckpt': './model_checkpoints/molconf_molconf_RGCN_epoch_20_layers_4_random/last.ckpt', 'lin_eval': False, 'model_type': 'deepdrug', 'gpus': 0, 'num_out_dim': 1, 'n_layers': 4, 'n_confs': 0, 'g_conv': 'RGCN', 'lr': 0.0001}
<class 'DeepGCN.SAGEConvV2'>
print parameters:
{
  "earlystopping_tracking": "val_epoch_F1",
  "entry1_data_folder": "./dataset/TWOSIDES/drug",
  "entry1_seq_file": "./dataset/TWOSIDES/drug/drug.csv",
  "entry2_data_folder": "./dataset/TWOSIDES/drug",
  "entry2_seq_file": null,
  "entry_pairs_file": "./dataset/TWOSIDES/binary_1vs1/entry_pairs.csv",
  "gpus": 0,
  "model_type": "deepdrug",
  "pair_labels_file": "./dataset/TWOSIDES/binary_1vs1/pair_labels.csv",
  "save_folder": "./output/mol_conf/RGCN/TWOSIDES/binary_1vs1/all_cluster/",
  "scheduler_ReduceLROnPlateau_tracking": "F1",
  "split_strat": "sample_from_all_clusters",
  "task_type": "binary",
  "y_pred_file": "./output/mol_conf/RGCN/TWOSIDES/binary_1vs1/all_cluster/test_pred.csv",
  "y_transfrom_func": null,
  "y_true_file": "./output/mol_conf/RGCN/TWOSIDES/binary_1vs1/all_cluster/test_true.csv"
}
DeepDrug(
  (gconv1): DeeperGCN(
    (node_encoder): Sequential(
      (0): Linear(in_features=121, out_features=128, bias=True)
      (1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (gcn_blocks): ModuleList(
      (0): ModuleList(
        (0): DeepGCNLayerV2(block=res+)
        (1): DeepGCNLayerV2(block=res+)
        (2): DeepGCNLayerV2(block=res+)
        (3): DeepGCNLayerV2(block=res+)
      )
    )
    (edge_encoder): Sequential(
      (0): Linear(in_features=11, out_features=128, bias=True)
      (1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
  )
  (gconv2): DeeperGCN(
    (node_encoder): Sequential(
      (0): Linear(in_features=121, out_features=128, bias=True)
      (1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (gcn_blocks): ModuleList(
      (0): ModuleList(
        (0): DeepGCNLayerV2(block=res+)
        (1): DeepGCNLayerV2(block=res+)
        (2): DeepGCNLayerV2(block=res+)
        (3): DeepGCNLayerV2(block=res+)
      )
    )
    (edge_encoder): Sequential(
      (0): Linear(in_features=11, out_features=128, bias=True)
      (1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
  )
  (global_fc_nn): Sequential(
    (0): Linear(in_features=256, out_features=128, bias=True)
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Dropout(p=0.2, inplace=False)
    (3): ReLU()
    (4): Linear(in_features=128, out_features=32, bias=True)
    (5): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Dropout(p=0.2, inplace=False)
    (7): ReLU()
  )
  (fc2): Linear(in_features=32, out_features=1, bias=True)
)
MolConfModel(
  (mol_encoder): DeeperGCN(
    (node_encoder): Sequential(
      (0): Linear(in_features=121, out_features=128, bias=True)
      (1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (gcn_blocks): ModuleList(
      (0): ModuleList(
        (0): DeepGCNLayerV2(block=res+)
        (1): DeepGCNLayerV2(block=res+)
        (2): DeepGCNLayerV2(block=res+)
        (3): DeepGCNLayerV2(block=res+)
      )
    )
    (edge_encoder): Sequential(
      (0): Linear(in_features=11, out_features=128, bias=True)
      (1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
  )
  (conf_encoder): DeeperGCN(
    (node_encoder): Sequential(
      (0): Linear(in_features=14, out_features=128, bias=True)
      (1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (gcn_blocks): ModuleList(
      (0): ModuleList(
        (0): DeepGCNLayerV2(block=res+)
        (1): DeepGCNLayerV2(block=res+)
        (2): DeepGCNLayerV2(block=res+)
        (3): DeepGCNLayerV2(block=res+)
      )
    )
    (edge_encoder): Sequential(
      (0): Linear(in_features=6, out_features=128, bias=True)
      (1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
  )
  (mol_lin): Linear(in_features=128, out_features=128, bias=True)
  (conf_lin): Linear(in_features=128, out_features=128, bias=True)
  (out_lin): Sequential(
    (0): Linear(in_features=128, out_features=128, bias=True)
    (1): ReLU(inplace=True)
    (2): Linear(in_features=128, out_features=64, bias=True)
  )
)
MolConfModel(
  (mol_encoder): DeeperGCN(
    (node_encoder): Sequential(
      (0): Linear(in_features=121, out_features=128, bias=True)
      (1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (gcn_blocks): ModuleList(
      (0): ModuleList(
        (0): DeepGCNLayerV2(block=res+)
        (1): DeepGCNLayerV2(block=res+)
        (2): DeepGCNLayerV2(block=res+)
        (3): DeepGCNLayerV2(block=res+)
      )
    )
    (edge_encoder): Sequential(
      (0): Linear(in_features=11, out_features=128, bias=True)
      (1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
  )
  (conf_encoder): DeeperGCN(
    (node_encoder): Sequential(
      (0): Linear(in_features=14, out_features=128, bias=True)
      (1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (gcn_blocks): ModuleList(
      (0): ModuleList(
        (0): DeepGCNLayerV2(block=res+)
        (1): DeepGCNLayerV2(block=res+)
        (2): DeepGCNLayerV2(block=res+)
        (3): DeepGCNLayerV2(block=res+)
      )
    )
    (edge_encoder): Sequential(
      (0): Linear(in_features=6, out_features=128, bias=True)
      (1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
  )
  (mol_lin): Linear(in_features=128, out_features=128, bias=True)
  (conf_lin): Linear(in_features=128, out_features=128, bias=True)
  (out_lin): Sequential(
    (0): Linear(in_features=128, out_features=128, bias=True)
    (1): ReLU(inplace=True)
    (2): Linear(in_features=128, out_features=64, bias=True)
  )
)
preparing dataset...
loading processed data...
add degrees as node features for each sample...
loading processed data...
add degrees as node features for each sample...
can not find cv_file,  sample_from_all_clusters ...
0.6319415042738955
0.12169445366227644
0.2463640420638281
in val dataloader...

val:Ep0000|| F1: 1.000,auROC nan,auPRC: 1.000
in train dataloader...

val:Ep0000|| F1: 0.749,auROC 0.804,auPRC: 0.868

trn:Ep0000|| F1: 0.688,auROC 0.704,auPRC: 0.696

val:Ep0001|| F1: 0.819,auROC 0.824,auPRC: 0.860

trn:Ep0001|| F1: 0.750,auROC 0.815,auPRC: 0.818

val:Ep0002|| F1: 0.808,auROC 0.821,auPRC: 0.874

trn:Ep0002|| F1: 0.794,auROC 0.867,auPRC: 0.874

val:Ep0003|| F1: 0.683,auROC 0.800,auPRC: 0.852

trn:Ep0003|| F1: 0.818,auROC 0.894,auPRC: 0.902

val:Ep0004|| F1: 0.716,auROC 0.827,auPRC: 0.874

trn:Ep0004|| F1: 0.840,auROC 0.914,auPRC: 0.923

val:Ep0005|| F1: 0.740,auROC 0.804,auPRC: 0.846

trn:Ep0005|| F1: 0.858,auROC 0.929,auPRC: 0.937

val:Ep0006|| F1: 0.815,auROC 0.826,auPRC: 0.871

trn:Ep0006|| F1: 0.873,auROC 0.941,auPRC: 0.948

val:Ep0007|| F1: 0.781,auROC 0.823,auPRC: 0.879

trn:Ep0007|| F1: 0.880,auROC 0.947,auPRC: 0.955

val:Ep0008|| F1: 0.766,auROC 0.832,auPRC: 0.888
Epoch    10: reducing learning rate of group 0 to 1.0000e-05.

trn:Ep0008|| F1: 0.891,auROC 0.953,auPRC: 0.960

val:Ep0009|| F1: 0.805,auROC 0.847,auPRC: 0.896

trn:Ep0009|| F1: 0.903,auROC 0.962,auPRC: 0.967

val:Ep0010|| F1: 0.794,auROC 0.850,auPRC: 0.898

trn:Ep0010|| F1: 0.905,auROC 0.963,auPRC: 0.969

val:Ep0011|| F1: 0.814,auROC 0.846,auPRC: 0.895
loading best weight in C:\Users\junhu\Desktop\Dissertation\MAEDDI\output\mol_conf\RGCN\TWOSIDES\binary_1vs1\all_cluster\models\epoch=1-step=432.ckpt ...
DeepDrug(
  (gconv1): DeeperGCN(
    (node_encoder): Sequential(
      (0): Linear(in_features=121, out_features=128, bias=True)
      (1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (gcn_blocks): ModuleList(
      (0): ModuleList(
        (0): DeepGCNLayerV2(block=res+)
        (1): DeepGCNLayerV2(block=res+)
        (2): DeepGCNLayerV2(block=res+)
        (3): DeepGCNLayerV2(block=res+)
      )
    )
    (edge_encoder): Sequential(
      (0): Linear(in_features=11, out_features=128, bias=True)
      (1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
  )
  (gconv2): DeeperGCN(
    (node_encoder): Sequential(
      (0): Linear(in_features=121, out_features=128, bias=True)
      (1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (gcn_blocks): ModuleList(
      (0): ModuleList(
        (0): DeepGCNLayerV2(block=res+)
        (1): DeepGCNLayerV2(block=res+)
        (2): DeepGCNLayerV2(block=res+)
        (3): DeepGCNLayerV2(block=res+)
      )
    )
    (edge_encoder): Sequential(
      (0): Linear(in_features=11, out_features=128, bias=True)
      (1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
  )
  (global_fc_nn): Sequential(
    (0): Linear(in_features=256, out_features=128, bias=True)
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Dropout(p=0.2, inplace=False)
    (3): ReLU()
    (4): Linear(in_features=128, out_features=32, bias=True)
    (5): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Dropout(p=0.2, inplace=False)
    (7): ReLU()
  )
  (fc2): Linear(in_features=32, out_features=1, bias=True)
)
in test dataloader...

tst:Ep0012|| F1: 0.775,auROC 0.842,auPRC: 0.851
------------------------------------------------------------------------------------------------------------------------
       Test metric             DataLoader 0
------------------------------------------------------------------------------------------------------------------------
        test_loss           0.6488754749298096
------------------------------------------------------------------------------------------------------------------------
in test dataloader...
save prediction completed.
