Namespace(configfile='./configs/TWOSIDES/mae/4_mae_allcls_RGIN.yml')
{'dataset': 'TWOSIDES', 'task': 'binary', 'category': 'DDI', 'entry1_file': './dataset/TWOSIDES/drug/processed/data.pt', 'entry2_file': './dataset/TWOSIDES/drug/processed/data.pt', 'entry1_seq_file': './dataset/TWOSIDES/drug/drug.csv', 'pair_file': './dataset/TWOSIDES/binary_1vs1/entry_pairs.csv', 'label_file': './dataset/TWOSIDES/binary_1vs1/pair_labels.csv', 'save_folder': './output/MAE/RGIN/TWOSIDES/binary_1vs1/all_cluster/', 'split_strategy': 'sample_from_all_clusters', 'gconv_ckpt': './model_checkpoints/mae_epoch_RGIN_20_layers_4_random/last.ckpt', 'lin_eval': False, 'model_type': 'deepdrug', 'gpus': 0, 'num_out_dim': 1, 'n_layers': 4, 'g_conv': 'RGIN', 'lr': 0.0001}
print parameters:
{
  "earlystopping_tracking": "val_epoch_F1",
  "entry1_data_folder": "./dataset/TWOSIDES/drug",
  "entry1_seq_file": "./dataset/TWOSIDES/drug/drug.csv",
  "entry2_data_folder": "./dataset/TWOSIDES/drug",
  "entry2_seq_file": null,
  "entry_pairs_file": "./dataset/TWOSIDES/binary_1vs1/entry_pairs.csv",
  "gpus": 0,
  "model_type": "deepdrug",
  "pair_labels_file": "./dataset/TWOSIDES/binary_1vs1/pair_labels.csv",
  "save_folder": "./output/MAE/RGIN/TWOSIDES/binary_1vs1/all_cluster/",
  "scheduler_ReduceLROnPlateau_tracking": "F1",
  "split_strat": "sample_from_all_clusters",
  "task_type": "binary",
  "y_pred_file": "./output/MAE/RGIN/TWOSIDES/binary_1vs1/all_cluster/test_pred.csv",
  "y_transfrom_func": null,
  "y_true_file": "./output/MAE/RGIN/TWOSIDES/binary_1vs1/all_cluster/test_true.csv"
}
DeepDrug(
  (gconv1): DeeperGCN(
    (node_encoder): Sequential(
      (0): Linear(in_features=121, out_features=128, bias=True)
      (1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (gcn_blocks): ModuleList(
      (0): ModuleList(
        (0): DeepGCNLayerV2(block=res+)
        (1): DeepGCNLayerV2(block=res+)
        (2): DeepGCNLayerV2(block=res+)
        (3): DeepGCNLayerV2(block=res+)
      )
    )
    (edge_encoder): Sequential(
      (0): Linear(in_features=11, out_features=128, bias=True)
      (1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
  )
  (gconv2): DeeperGCN(
    (node_encoder): Sequential(
      (0): Linear(in_features=121, out_features=128, bias=True)
      (1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (gcn_blocks): ModuleList(
      (0): ModuleList(
        (0): DeepGCNLayerV2(block=res+)
        (1): DeepGCNLayerV2(block=res+)
        (2): DeepGCNLayerV2(block=res+)
        (3): DeepGCNLayerV2(block=res+)
      )
    )
    (edge_encoder): Sequential(
      (0): Linear(in_features=11, out_features=128, bias=True)
      (1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
  )
  (global_fc_nn): Sequential(
    (0): Linear(in_features=256, out_features=128, bias=True)
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Dropout(p=0.2, inplace=False)
    (3): ReLU()
    (4): Linear(in_features=128, out_features=32, bias=True)
    (5): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Dropout(p=0.2, inplace=False)
    (7): ReLU()
  )
  (fc2): Linear(in_features=32, out_features=1, bias=True)
)
PreModel(
  (encoder): DeeperGCN(
    (node_encoder): Sequential(
      (0): Linear(in_features=121, out_features=128, bias=True)
      (1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (gcn_blocks): ModuleList(
      (0): ModuleList(
        (0): DeepGCNLayerV2(block=res+)
        (1): DeepGCNLayerV2(block=res+)
        (2): DeepGCNLayerV2(block=res+)
        (3): DeepGCNLayerV2(block=res+)
      )
    )
    (edge_encoder): Sequential(
      (0): Linear(in_features=11, out_features=128, bias=True)
      (1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
  )
  (decoder): DeeperGCN(
    (node_encoder): Sequential(
      (0): Linear(in_features=128, out_features=121, bias=True)
      (1): LayerNorm((121,), eps=1e-05, elementwise_affine=True)
    )
    (gcn_blocks): ModuleList(
      (0): ModuleList(
        (0): DeepGCNLayerV2(block=res+)
      )
    )
    (edge_encoder): Sequential(
      (0): Linear(in_features=128, out_features=11, bias=True)
      (1): LayerNorm((11,), eps=1e-05, elementwise_affine=True)
    )
    (edge_decoder): Linear(in_features=121, out_features=11, bias=True)
  )
  (encoder2decoder_nodes): Linear(in_features=128, out_features=128, bias=False)
  (encoder2decoder_edges): Linear(in_features=128, out_features=128, bias=False)
)
PreModel(
  (encoder): DeeperGCN(
    (node_encoder): Sequential(
      (0): Linear(in_features=121, out_features=128, bias=True)
      (1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (gcn_blocks): ModuleList(
      (0): ModuleList(
        (0): DeepGCNLayerV2(block=res+)
        (1): DeepGCNLayerV2(block=res+)
        (2): DeepGCNLayerV2(block=res+)
        (3): DeepGCNLayerV2(block=res+)
      )
    )
    (edge_encoder): Sequential(
      (0): Linear(in_features=11, out_features=128, bias=True)
      (1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
  )
  (decoder): DeeperGCN(
    (node_encoder): Sequential(
      (0): Linear(in_features=128, out_features=121, bias=True)
      (1): LayerNorm((121,), eps=1e-05, elementwise_affine=True)
    )
    (gcn_blocks): ModuleList(
      (0): ModuleList(
        (0): DeepGCNLayerV2(block=res+)
      )
    )
    (edge_encoder): Sequential(
      (0): Linear(in_features=128, out_features=11, bias=True)
      (1): LayerNorm((11,), eps=1e-05, elementwise_affine=True)
    )
    (edge_decoder): Linear(in_features=121, out_features=11, bias=True)
  )
  (encoder2decoder_nodes): Linear(in_features=128, out_features=128, bias=False)
  (encoder2decoder_edges): Linear(in_features=128, out_features=128, bias=False)
)
preparing dataset...
loading processed data...
add degrees as node features for each sample...
loading processed data...
add degrees as node features for each sample...
can not find cv_file,  sample_from_all_clusters ...
0.6912153425409939
0.10614365323660331
0.20264100422240278
in val dataloader...

val:Ep0000|| F1: 0.985,auROC nan,auPRC: 1.000
in train dataloader...

val:Ep0000|| F1: 0.653,auROC 0.787,auPRC: 0.697

trn:Ep0000|| F1: 0.697,auROC 0.715,auPRC: 0.744

val:Ep0001|| F1: 0.669,auROC 0.806,auPRC: 0.727

trn:Ep0001|| F1: 0.777,auROC 0.818,auPRC: 0.845

val:Ep0002|| F1: 0.664,auROC 0.823,auPRC: 0.746

trn:Ep0002|| F1: 0.825,auROC 0.879,auPRC: 0.902

val:Ep0003|| F1: 0.666,auROC 0.811,auPRC: 0.745

trn:Ep0003|| F1: 0.852,auROC 0.910,auPRC: 0.931

val:Ep0004|| F1: 0.702,auROC 0.821,auPRC: 0.727

trn:Ep0004|| F1: 0.871,auROC 0.930,auPRC: 0.947

val:Ep0005|| F1: 0.703,auROC 0.834,auPRC: 0.770

trn:Ep0005|| F1: 0.887,auROC 0.943,auPRC: 0.958

val:Ep0006|| F1: 0.691,auROC 0.820,auPRC: 0.756

trn:Ep0006|| F1: 0.897,auROC 0.951,auPRC: 0.965

val:Ep0007|| F1: 0.668,auROC 0.836,auPRC: 0.777

trn:Ep0007|| F1: 0.906,auROC 0.958,auPRC: 0.969

val:Ep0008|| F1: 0.684,auROC 0.817,auPRC: 0.747
Epoch    10: reducing learning rate of group 0 to 1.0000e-05.

trn:Ep0008|| F1: 0.911,auROC 0.961,auPRC: 0.972

val:Ep0009|| F1: 0.686,auROC 0.830,auPRC: 0.763

trn:Ep0009|| F1: 0.921,auROC 0.969,auPRC: 0.978

val:Ep0010|| F1: 0.691,auROC 0.834,auPRC: 0.773

trn:Ep0010|| F1: 0.924,auROC 0.970,auPRC: 0.979

val:Ep0011|| F1: 0.696,auROC 0.830,auPRC: 0.762

trn:Ep0011|| F1: 0.925,auROC 0.971,auPRC: 0.979

val:Ep0012|| F1: 0.699,auROC 0.836,auPRC: 0.770

trn:Ep0012|| F1: 0.926,auROC 0.971,auPRC: 0.980

val:Ep0013|| F1: 0.680,auROC 0.820,auPRC: 0.754

trn:Ep0013|| F1: 0.926,auROC 0.971,auPRC: 0.980

val:Ep0014|| F1: 0.691,auROC 0.829,auPRC: 0.760

trn:Ep0014|| F1: 0.927,auROC 0.972,auPRC: 0.980

val:Ep0015|| F1: 0.687,auROC 0.825,auPRC: 0.762
loading best weight in C:\Users\junhu\Desktop\Dissertation\MAEDDI\output\MAE\RGIN\TWOSIDES\binary_1vs1\all_cluster\models\epoch=5-step=1416.ckpt ...
DeepDrug(
  (gconv1): DeeperGCN(
    (node_encoder): Sequential(
      (0): Linear(in_features=121, out_features=128, bias=True)
      (1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (gcn_blocks): ModuleList(
      (0): ModuleList(
        (0): DeepGCNLayerV2(block=res+)
        (1): DeepGCNLayerV2(block=res+)
        (2): DeepGCNLayerV2(block=res+)
        (3): DeepGCNLayerV2(block=res+)
      )
    )
    (edge_encoder): Sequential(
      (0): Linear(in_features=11, out_features=128, bias=True)
      (1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
  )
  (gconv2): DeeperGCN(
    (node_encoder): Sequential(
      (0): Linear(in_features=121, out_features=128, bias=True)
      (1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (gcn_blocks): ModuleList(
      (0): ModuleList(
        (0): DeepGCNLayerV2(block=res+)
        (1): DeepGCNLayerV2(block=res+)
        (2): DeepGCNLayerV2(block=res+)
        (3): DeepGCNLayerV2(block=res+)
      )
    )
    (edge_encoder): Sequential(
      (0): Linear(in_features=11, out_features=128, bias=True)
      (1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
  )
  (global_fc_nn): Sequential(
    (0): Linear(in_features=256, out_features=128, bias=True)
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Dropout(p=0.2, inplace=False)
    (3): ReLU()
    (4): Linear(in_features=128, out_features=32, bias=True)
    (5): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Dropout(p=0.2, inplace=False)
    (7): ReLU()
  )
  (fc2): Linear(in_features=32, out_features=1, bias=True)
)
in test dataloader...

tst:Ep0016|| F1: 0.756,auROC 0.785,auPRC: 0.780
------------------------------------------------------------------------------------------------------------------------
       Test metric             DataLoader 0
------------------------------------------------------------------------------------------------------------------------
        test_loss            0.700529932975769
------------------------------------------------------------------------------------------------------------------------
in test dataloader...
save prediction completed.
