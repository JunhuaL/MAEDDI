Namespace(configfile='./configs/DrugBank/clr/4_clr_allcls_RGCN.yml')
{'dataset': 'DrugBank', 'task': 'binary', 'category': 'DDI', 'entry1_file': './dataset/DrugBank/drug/processed/data.pt', 'entry2_file': './dataset/DrugBank/drug/processed/data.pt', 'entry1_seq_file': './dataset/DrugBank/drug/drug.csv', 'pair_file': './dataset/DrugBank/binary_1vs1/entry_pairs.csv', 'label_file': './dataset/DrugBank/binary_1vs1/pair_labels.csv', 'save_folder': './output/CLR/RGCN/DrugBank/binary_1vs1/all_cluster/', 'split_strategy': 'sample_from_all_clusters', 'gconv_ckpt': './model_checkpoints/clr_epoch_RGCN_20_layers_4_random/last.ckpt', 'lin_eval': False, 'model_type': 'deepdrug', 'gpus': 0, 'num_out_dim': 1, 'n_layers': 4, 'g_conv': 'RGCN', 'lr': 0.0001}
print parameters:
{
  "earlystopping_tracking": "val_epoch_F1",
  "entry1_data_folder": "./dataset/DrugBank/drug",
  "entry1_seq_file": "./dataset/DrugBank/drug/drug.csv",
  "entry2_data_folder": "./dataset/DrugBank/drug",
  "entry2_seq_file": null,
  "entry_pairs_file": "./dataset/DrugBank/binary_1vs1/entry_pairs.csv",
  "gpus": 0,
  "model_type": "deepdrug",
  "pair_labels_file": "./dataset/DrugBank/binary_1vs1/pair_labels.csv",
  "save_folder": "./output/CLR/RGCN/DrugBank/binary_1vs1/all_cluster/",
  "scheduler_ReduceLROnPlateau_tracking": "F1",
  "split_strat": "sample_from_all_clusters",
  "task_type": "binary",
  "y_pred_file": "./output/CLR/RGCN/DrugBank/binary_1vs1/all_cluster/test_pred.csv",
  "y_transfrom_func": null,
  "y_true_file": "./output/CLR/RGCN/DrugBank/binary_1vs1/all_cluster/test_true.csv"
}
DeepDrug(
  (gconv1): DeeperGCN(
    (node_encoder): Sequential(
      (0): Linear(in_features=121, out_features=128, bias=True)
      (1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (gcn_blocks): ModuleList(
      (0): ModuleList(
        (0): DeepGCNLayerV2(block=res+)
        (1): DeepGCNLayerV2(block=res+)
        (2): DeepGCNLayerV2(block=res+)
        (3): DeepGCNLayerV2(block=res+)
      )
    )
    (edge_encoder): Sequential(
      (0): Linear(in_features=11, out_features=128, bias=True)
      (1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
  )
  (gconv2): DeeperGCN(
    (node_encoder): Sequential(
      (0): Linear(in_features=121, out_features=128, bias=True)
      (1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (gcn_blocks): ModuleList(
      (0): ModuleList(
        (0): DeepGCNLayerV2(block=res+)
        (1): DeepGCNLayerV2(block=res+)
        (2): DeepGCNLayerV2(block=res+)
        (3): DeepGCNLayerV2(block=res+)
      )
    )
    (edge_encoder): Sequential(
      (0): Linear(in_features=11, out_features=128, bias=True)
      (1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
  )
  (global_fc_nn): Sequential(
    (0): Linear(in_features=256, out_features=128, bias=True)
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Dropout(p=0.2, inplace=False)
    (3): ReLU()
    (4): Linear(in_features=128, out_features=32, bias=True)
    (5): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Dropout(p=0.2, inplace=False)
    (7): ReLU()
  )
  (fc2): Linear(in_features=32, out_features=1, bias=True)
)
preparing dataset...
loading processed data...
add degrees as node features for each sample...
loading processed data...
add degrees as node features for each sample...
can not find cv_file,  sample_from_all_clusters ...
0.634156806010836
0.13169632929837827
0.23414686469078572
in val dataloader...

val:Ep0000|| F1: 0.000,auROC nan,auPRC: 1.000
in train dataloader...

val:Ep0000|| F1: 0.728,auROC 0.740,auPRC: 0.732

trn:Ep0000|| F1: 0.643,auROC 0.672,auPRC: 0.633

val:Ep0001|| F1: 0.614,auROC 0.764,auPRC: 0.759

trn:Ep0001|| F1: 0.687,auROC 0.745,auPRC: 0.713

val:Ep0002|| F1: 0.690,auROC 0.787,auPRC: 0.785

trn:Ep0002|| F1: 0.717,auROC 0.787,auPRC: 0.761

val:Ep0003|| F1: 0.771,auROC 0.811,auPRC: 0.808

trn:Ep0003|| F1: 0.744,auROC 0.819,auPRC: 0.795

val:Ep0004|| F1: 0.769,auROC 0.822,auPRC: 0.821

trn:Ep0004|| F1: 0.765,auROC 0.843,auPRC: 0.822

val:Ep0005|| F1: 0.771,auROC 0.829,auPRC: 0.830

trn:Ep0005|| F1: 0.782,auROC 0.860,auPRC: 0.841

val:Ep0006|| F1: 0.721,auROC 0.824,auPRC: 0.827

trn:Ep0006|| F1: 0.794,auROC 0.874,auPRC: 0.856

val:Ep0007|| F1: 0.763,auROC 0.834,auPRC: 0.840

trn:Ep0007|| F1: 0.806,auROC 0.885,auPRC: 0.868

val:Ep0008|| F1: 0.789,auROC 0.841,auPRC: 0.842

trn:Ep0008|| F1: 0.817,auROC 0.894,auPRC: 0.877

val:Ep0009|| F1: 0.789,auROC 0.847,auPRC: 0.852

trn:Ep0009|| F1: 0.824,auROC 0.901,auPRC: 0.885

val:Ep0010|| F1: 0.772,auROC 0.845,auPRC: 0.849

trn:Ep0010|| F1: 0.831,auROC 0.907,auPRC: 0.892

val:Ep0011|| F1: 0.787,auROC 0.849,auPRC: 0.854

trn:Ep0011|| F1: 0.838,auROC 0.914,auPRC: 0.899

val:Ep0012|| F1: 0.773,auROC 0.844,auPRC: 0.851

trn:Ep0012|| F1: 0.843,auROC 0.918,auPRC: 0.904

val:Ep0013|| F1: 0.773,auROC 0.853,auPRC: 0.862

trn:Ep0013|| F1: 0.849,auROC 0.923,auPRC: 0.909

val:Ep0014|| F1: 0.753,auROC 0.850,auPRC: 0.858

trn:Ep0014|| F1: 0.853,auROC 0.927,auPRC: 0.915

val:Ep0015|| F1: 0.757,auROC 0.850,auPRC: 0.858

trn:Ep0015|| F1: 0.858,auROC 0.931,auPRC: 0.918

val:Ep0016|| F1: 0.767,auROC 0.849,auPRC: 0.860

trn:Ep0016|| F1: 0.862,auROC 0.934,auPRC: 0.923

val:Ep0017|| F1: 0.778,auROC 0.855,auPRC: 0.863

trn:Ep0017|| F1: 0.865,auROC 0.937,auPRC: 0.926

val:Ep0018|| F1: 0.746,auROC 0.848,auPRC: 0.860
Epoch    20: reducing learning rate of group 0 to 1.0000e-05.
loading best weight in C:\Users\junhu\Desktop\Dissertation\MAEDDI\output\CLR\RGCN\DrugBank\binary_1vs1\all_cluster\models\epoch=9-step=9470.ckpt ...
DeepDrug(
  (gconv1): DeeperGCN(
    (node_encoder): Sequential(
      (0): Linear(in_features=121, out_features=128, bias=True)
      (1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (gcn_blocks): ModuleList(
      (0): ModuleList(
        (0): DeepGCNLayerV2(block=res+)
        (1): DeepGCNLayerV2(block=res+)
        (2): DeepGCNLayerV2(block=res+)
        (3): DeepGCNLayerV2(block=res+)
      )
    )
    (edge_encoder): Sequential(
      (0): Linear(in_features=11, out_features=128, bias=True)
      (1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
  )
  (gconv2): DeeperGCN(
    (node_encoder): Sequential(
      (0): Linear(in_features=121, out_features=128, bias=True)
      (1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (gcn_blocks): ModuleList(
      (0): ModuleList(
        (0): DeepGCNLayerV2(block=res+)
        (1): DeepGCNLayerV2(block=res+)
        (2): DeepGCNLayerV2(block=res+)
        (3): DeepGCNLayerV2(block=res+)
      )
    )
    (edge_encoder): Sequential(
      (0): Linear(in_features=11, out_features=128, bias=True)
      (1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
  )
  (global_fc_nn): Sequential(
    (0): Linear(in_features=256, out_features=128, bias=True)
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Dropout(p=0.2, inplace=False)
    (3): ReLU()
    (4): Linear(in_features=128, out_features=32, bias=True)
    (5): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Dropout(p=0.2, inplace=False)
    (7): ReLU()
  )
  (fc2): Linear(in_features=32, out_features=1, bias=True)
)
in test dataloader...

tst:Ep0019|| F1: 0.730,auROC 0.810,auPRC: 0.815
------------------------------------------------------------------------------------------------------------------------
       Test metric             DataLoader 0
------------------------------------------------------------------------------------------------------------------------
        test_loss           0.5771641135215759
------------------------------------------------------------------------------------------------------------------------
in test dataloader...
save prediction completed.
