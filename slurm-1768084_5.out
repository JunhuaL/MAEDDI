Job running on landonia06
Job started: 13/01/2024 14:59:46
Setting up bash environment
Activating conda environment: masters
Running provided command: python finetuning.py --configfile=./configs/AEconfigs/1_layers.all_cluster.yml
GPU available: True (cuda), used: True
TPU available: False, using: 0 TPU cores
IPU available: False, using: 0 IPUs
HPU available: False, using: 0 HPUs
[15:00:56] SMILES Parse Error: syntax error while parsing: OC1=CC=CC(=C1)C-1=C2\CCC(=N2)\C(=C2/N\C(\C=C2)=C(/C2=N/C(/C=C2)=C(\C2=CC=C\-1N2)C1=CC(O)=CC=C1)C1=CC(O)=CC=C1)\C1=CC(O)=CC=C1
[15:00:56] SMILES Parse Error: Failed parsing SMILES 'OC1=CC=CC(=C1)C-1=C2\CCC(=N2)\C(=C2/N\C(\C=C2)=C(/C2=N/C(/C=C2)=C(\C2=CC=C\-1N2)C1=CC(O)=CC=C1)C1=CC(O)=CC=C1)\C1=CC(O)=CC=C1' for input: 'OC1=CC=CC(=C1)C-1=C2\CCC(=N2)\C(=C2/N\C(\C=C2)=C(/C2=N/C(/C=C2)=C(\C2=CC=C\-1N2)C1=CC(O)=CC=C1)C1=CC(O)=CC=C1)\C1=CC(O)=CC=C1'
[15:00:56] Explicit valence for atom # 0 N, 4, is greater than permitted
[15:00:56] Explicit valence for atom # 0 N, 4, is greater than permitted
[15:00:56] Explicit valence for atom # 0 N, 4, is greater than permitted
[15:00:56] Explicit valence for atom # 0 N, 4, is greater than permitted
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]

  | Name  | Type     | Params
-----------------------------------
0 | model | DeepDrug | 318 K 
-----------------------------------
318 K     Trainable params
0         Non-trainable params
318 K     Total params
1.275     Total estimated model params size (MB)
Metric val_epoch_F1 improved. New best score: 0.548
Metric val_epoch_F1 improved by 0.023 >= min_delta = 0.001. New best score: 0.571
Metric val_epoch_F1 improved by 0.162 >= min_delta = 0.001. New best score: 0.733
Metric val_epoch_F1 improved by 0.014 >= min_delta = 0.001. New best score: 0.748
Metric val_epoch_F1 improved by 0.018 >= min_delta = 0.001. New best score: 0.765
Monitored metric val_epoch_F1 did not improve in the last 10 records. Best score: 0.765. Signaling Trainer to stop.
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]
Namespace(configfile='./configs/AEconfigs/1_layers.all_cluster.yml')
{'dataset': 'DrugBank', 'task': 'binary', 'category': 'DDI', 'entry1_file': './dataset/DrugBank/drug/processed/data.pt', 'entry2_file': './dataset/DrugBank/drug/processed/data.pt', 'entry1_seq_file': './dataset/DrugBank/drug/drug.csv', 'entry2_seq_file': './dataset/DrugBank/drug/drug.csv', 'pair_file': './dataset/DrugBank/binary_1vs1/entry_pairs.csv', 'label_file': './dataset/DrugBank/binary_1vs1/pair_labels.csv', 'save_folder': './output/DrugBank/binary_1vs1/all_cluster/', 'split_strategy': 'sample_from_all_clusters', 'gconv_ckpt': './model_checkpoints/epoch_80_layers_1_all_cls/last.ckpt', 'cnn_ckpt': './model_checkpoints/cnn_max_epoch_80_all_cls/last.ckpt', 'lin_eval': False, 'model_type': 'deepdrug', 'gpus': 0, 'num_out_dim': 1, 'n_layers': 1}
print parameters:
{
  "earlystopping_tracking": "val_epoch_F1",
  "entry1_data_folder": "./dataset/DrugBank/drug",
  "entry1_seq_file": "./dataset/DrugBank/drug/drug.csv",
  "entry2_data_folder": "./dataset/DrugBank/drug",
  "entry2_seq_file": "./dataset/DrugBank/drug/drug.csv",
  "entry_pairs_file": "./dataset/DrugBank/binary_1vs1/entry_pairs.csv",
  "gpus": 0,
  "model_type": "deepdrug",
  "pair_labels_file": "./dataset/DrugBank/binary_1vs1/pair_labels.csv",
  "save_folder": "./output/DrugBank/binary_1vs1/all_cluster/",
  "scheduler_ReduceLROnPlateau_tracking": "F1",
  "split_strat": "sample_from_all_clusters",
  "task_type": "binary",
  "y_pred_file": "./output/DrugBank/binary_1vs1/all_cluster/test_pred.csv",
  "y_transfrom_func": null,
  "y_true_file": "./output/DrugBank/binary_1vs1/all_cluster/test_true.csv"
}
DeepDrug(
  (gconv1): DeeperGCN(
    (node_encoder): Sequential(
      (0): Linear(in_features=121, out_features=128, bias=True)
      (1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (gcn_blocks): ModuleList(
      (0): ModuleList(
        (0): DeepGCNLayerV2(block=res+)
      )
    )
    (edge_encoder): Sequential(
      (0): Linear(in_features=11, out_features=128, bias=True)
      (1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
  )
  (gconv1_seq): CNN(
    (conv): ModuleList(
      (0): Conv1d(67, 32, kernel_size=(4,), stride=(1,))
      (1): Conv1d(32, 64, kernel_size=(6,), stride=(1,))
      (2): Conv1d(64, 96, kernel_size=(8,), stride=(1,))
    )
    (fc1): Linear(in_features=96, out_features=128, bias=True)
  )
  (gconv2): DeeperGCN(
    (node_encoder): Sequential(
      (0): Linear(in_features=121, out_features=128, bias=True)
      (1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (gcn_blocks): ModuleList(
      (0): ModuleList(
        (0): DeepGCNLayerV2(block=res+)
      )
    )
    (edge_encoder): Sequential(
      (0): Linear(in_features=11, out_features=128, bias=True)
      (1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
  )
  (gconv2_seq): CNN(
    (conv): ModuleList(
      (0): Conv1d(67, 32, kernel_size=(4,), stride=(1,))
      (1): Conv1d(32, 64, kernel_size=(6,), stride=(1,))
      (2): Conv1d(64, 96, kernel_size=(8,), stride=(1,))
    )
    (fc1): Linear(in_features=96, out_features=128, bias=True)
  )
  (global_fc_nn): Sequential(
    (0): Linear(in_features=512, out_features=128, bias=True)
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Dropout(p=0.2, inplace=False)
    (3): ReLU()
    (4): Linear(in_features=128, out_features=32, bias=True)
    (5): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Dropout(p=0.2, inplace=False)
    (7): ReLU()
  )
  (fc2): Linear(in_features=32, out_features=1, bias=True)
)
PreModel(
  (encoder): DeeperGCN(
    (node_encoder): Sequential(
      (0): Linear(in_features=121, out_features=128, bias=True)
      (1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (gcn_blocks): ModuleList(
      (0): ModuleList(
        (0): DeepGCNLayerV2(block=res+)
      )
    )
    (edge_encoder): Sequential(
      (0): Linear(in_features=11, out_features=128, bias=True)
      (1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
  )
  (decoder): DeeperGCN(
    (node_encoder): Sequential(
      (0): Linear(in_features=128, out_features=121, bias=True)
      (1): LayerNorm((121,), eps=1e-05, elementwise_affine=True)
    )
    (gcn_blocks): ModuleList(
      (0): ModuleList(
        (0): DeepGCNLayerV2(block=res+)
      )
    )
    (edge_encoder): Sequential(
      (0): Linear(in_features=128, out_features=11, bias=True)
      (1): LayerNorm((11,), eps=1e-05, elementwise_affine=True)
    )
    (edge_decoder): Linear(in_features=121, out_features=11, bias=True)
  )
  (encoder2decoder_nodes): Linear(in_features=128, out_features=128, bias=False)
  (encoder2decoder_edges): Linear(in_features=128, out_features=128, bias=False)
)
PreModel(
  (encoder): DeeperGCN(
    (node_encoder): Sequential(
      (0): Linear(in_features=121, out_features=128, bias=True)
      (1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (gcn_blocks): ModuleList(
      (0): ModuleList(
        (0): DeepGCNLayerV2(block=res+)
      )
    )
    (edge_encoder): Sequential(
      (0): Linear(in_features=11, out_features=128, bias=True)
      (1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
  )
  (decoder): DeeperGCN(
    (node_encoder): Sequential(
      (0): Linear(in_features=128, out_features=121, bias=True)
      (1): LayerNorm((121,), eps=1e-05, elementwise_affine=True)
    )
    (gcn_blocks): ModuleList(
      (0): ModuleList(
        (0): DeepGCNLayerV2(block=res+)
      )
    )
    (edge_encoder): Sequential(
      (0): Linear(in_features=128, out_features=11, bias=True)
      (1): LayerNorm((11,), eps=1e-05, elementwise_affine=True)
    )
    (edge_decoder): Linear(in_features=121, out_features=11, bias=True)
  )
  (encoder2decoder_nodes): Linear(in_features=128, out_features=128, bias=False)
  (encoder2decoder_edges): Linear(in_features=128, out_features=128, bias=False)
)
SMILESEnc2Dec(
  (encoder): CNN(
    (conv): ModuleList(
      (0): Conv1d(67, 32, kernel_size=(4,), stride=(1,))
      (1): Conv1d(32, 64, kernel_size=(6,), stride=(1,))
      (2): Conv1d(64, 96, kernel_size=(8,), stride=(1,))
    )
  )
  (decoder): CNN(
    (conv): ModuleList(
      (0): Conv1d(96, 96, kernel_size=(8,), stride=(1,))
      (1): Conv1d(96, 64, kernel_size=(6,), stride=(1,))
      (2): Conv1d(64, 67, kernel_size=(4,), stride=(1,))
    )
  )
  (decoder_pred): Linear(in_features=170, out_features=200, bias=True)
)
SMILESEnc2Dec(
  (encoder): CNN(
    (conv): ModuleList(
      (0): Conv1d(67, 32, kernel_size=(4,), stride=(1,))
      (1): Conv1d(32, 64, kernel_size=(6,), stride=(1,))
      (2): Conv1d(64, 96, kernel_size=(8,), stride=(1,))
    )
  )
  (decoder): CNN(
    (conv): ModuleList(
      (0): Conv1d(96, 96, kernel_size=(8,), stride=(1,))
      (1): Conv1d(96, 64, kernel_size=(6,), stride=(1,))
      (2): Conv1d(64, 67, kernel_size=(4,), stride=(1,))
    )
  )
  (decoder_pred): Linear(in_features=170, out_features=200, bias=True)
)
preparing dataset...
loading processed data...
add degrees as node features for each sample...
using drug sequences file: ./dataset/DrugBank/drug
print save parquet file to load quickly next time at ./dataset/DrugBank/drug/drug.parquet
                                        SMILES                                              entry
drugID                                                                                           
DB04571    CC1=CC2=CC3=C(OC(=O)C=C3C)C(C)=C2O1  [21, 21, 25, 48, 21, 21, 10, 48, 21, 21, 26, 4...
DB00855                        NCC(=O)CCC(O)=O  [30, 21, 21, 55, 48, 64, 24, 21, 21, 21, 55, 6...
DB09536                               O=[Ti]=O  [64, 48, 12, 47, 33, 51, 48, 64, 29, 29, 29, 2...
DB01600  CC(C(O)=O)C1=CC=C(S1)C(=O)C1=CC=CC=C1  [21, 21, 55, 21, 55, 64, 24, 48, 64, 24, 21, 2...
checking entryIDs finished for MultiEmbedDataset_v1.
loading processed data...
add degrees as node features for each sample...
using target sequences file: ./dataset/DrugBank/drug
print save parquet file to load quickly next time at ./dataset/DrugBank/drug/drug.parquet
                                        SMILES                                              entry
drugID                                                                                           
DB04571    CC1=CC2=CC3=C(OC(=O)C=C3C)C(C)=C2O1  [21, 21, 25, 48, 21, 21, 10, 48, 21, 21, 26, 4...
DB00855                        NCC(=O)CCC(O)=O  [30, 21, 21, 55, 48, 64, 24, 21, 21, 21, 55, 6...
DB09536                               O=[Ti]=O  [64, 48, 12, 47, 33, 51, 48, 64, 29, 29, 29, 2...
DB01600  CC(C(O)=O)C1=CC=C(S1)C(=O)C1=CC=CC=C1  [21, 21, 55, 21, 55, 64, 24, 48, 64, 24, 21, 2...
checking entryIDs finished for MultiEmbedDataset_v1.
can not find cv_file,  sample_from_all_clusters ...
0.6371032490824158
0.13918084751418086
0.22371590340340342
in val dataloader...

val:Ep0000|| F1: 0.000,auROC nan,auPRC: 1.000
in train dataloader...

val:Ep0000|| F1: 0.548,auROC 0.779,auPRC: 0.802

trn:Ep0000|| F1: 0.776,auROC 0.854,auPRC: 0.834

val:Ep0001|| F1: 0.571,auROC 0.795,auPRC: 0.816

trn:Ep0001|| F1: 0.842,auROC 0.915,auPRC: 0.897

val:Ep0002|| F1: 0.733,auROC 0.808,auPRC: 0.835

trn:Ep0002|| F1: 0.861,auROC 0.932,auPRC: 0.918

val:Ep0003|| F1: 0.748,auROC 0.819,auPRC: 0.839

trn:Ep0003|| F1: 0.874,auROC 0.942,auPRC: 0.931

val:Ep0004|| F1: 0.723,auROC 0.815,auPRC: 0.841

trn:Ep0004|| F1: 0.884,auROC 0.951,auPRC: 0.941

val:Ep0005|| F1: 0.701,auROC 0.819,auPRC: 0.843

trn:Ep0005|| F1: 0.891,auROC 0.956,auPRC: 0.947

val:Ep0006|| F1: 0.694,auROC 0.816,auPRC: 0.844

trn:Ep0006|| F1: 0.897,auROC 0.960,auPRC: 0.953

val:Ep0007|| F1: 0.669,auROC 0.814,auPRC: 0.844

trn:Ep0007|| F1: 0.902,auROC 0.963,auPRC: 0.956

val:Ep0008|| F1: 0.686,auROC 0.817,auPRC: 0.845

trn:Ep0008|| F1: 0.907,auROC 0.966,auPRC: 0.960

val:Ep0009|| F1: 0.651,auROC 0.821,auPRC: 0.846

trn:Ep0009|| F1: 0.910,auROC 0.968,auPRC: 0.962

val:Ep0010|| F1: 0.713,auROC 0.827,auPRC: 0.855

trn:Ep0010|| F1: 0.913,auROC 0.970,auPRC: 0.965

val:Ep0011|| F1: 0.765,auROC 0.838,auPRC: 0.861

trn:Ep0011|| F1: 0.916,auROC 0.972,auPRC: 0.967

val:Ep0012|| F1: 0.738,auROC 0.833,auPRC: 0.858

trn:Ep0012|| F1: 0.918,auROC 0.973,auPRC: 0.969

val:Ep0013|| F1: 0.676,auROC 0.826,auPRC: 0.852

trn:Ep0013|| F1: 0.921,auROC 0.975,auPRC: 0.970

val:Ep0014|| F1: 0.751,auROC 0.831,auPRC: 0.858

trn:Ep0014|| F1: 0.923,auROC 0.976,auPRC: 0.972

val:Ep0015|| F1: 0.751,auROC 0.837,auPRC: 0.860

trn:Ep0015|| F1: 0.925,auROC 0.977,auPRC: 0.973

val:Ep0016|| F1: 0.750,auROC 0.835,auPRC: 0.859

trn:Ep0016|| F1: 0.926,auROC 0.978,auPRC: 0.974

val:Ep0017|| F1: 0.736,auROC 0.838,auPRC: 0.864

trn:Ep0017|| F1: 0.928,auROC 0.978,auPRC: 0.975

val:Ep0018|| F1: 0.629,auROC 0.826,auPRC: 0.855

trn:Ep0018|| F1: 0.930,auROC 0.979,auPRC: 0.975

val:Ep0019|| F1: 0.755,auROC 0.837,auPRC: 0.860

trn:Ep0019|| F1: 0.931,auROC 0.980,auPRC: 0.977

val:Ep0020|| F1: 0.697,auROC 0.834,auPRC: 0.859
Epoch 00022: reducing learning rate of group 0 to 1.0000e-04.

trn:Ep0020|| F1: 0.933,auROC 0.981,auPRC: 0.978

val:Ep0021|| F1: 0.687,auROC 0.837,auPRC: 0.863
loading best weight in /home/s1950841/MAEDDI/output/DrugBank/binary_1vs1/all_cluster/models/epoch=11-step=11460.ckpt ...
DeepDrug(
  (gconv1): DeeperGCN(
    (node_encoder): Sequential(
      (0): Linear(in_features=121, out_features=128, bias=True)
      (1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (gcn_blocks): ModuleList(
      (0): ModuleList(
        (0): DeepGCNLayerV2(block=res+)
      )
    )
    (edge_encoder): Sequential(
      (0): Linear(in_features=11, out_features=128, bias=True)
      (1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
  )
  (gconv1_seq): CNN(
    (conv): ModuleList(
      (0): Conv1d(67, 32, kernel_size=(4,), stride=(1,))
      (1): Conv1d(32, 64, kernel_size=(6,), stride=(1,))
      (2): Conv1d(64, 96, kernel_size=(8,), stride=(1,))
    )
    (fc1): Linear(in_features=96, out_features=128, bias=True)
  )
  (gconv2): DeeperGCN(
    (node_encoder): Sequential(
      (0): Linear(in_features=121, out_features=128, bias=True)
      (1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (gcn_blocks): ModuleList(
      (0): ModuleList(
        (0): DeepGCNLayerV2(block=res+)
      )
    )
    (edge_encoder): Sequential(
      (0): Linear(in_features=11, out_features=128, bias=True)
      (1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
  )
  (gconv2_seq): CNN(
    (conv): ModuleList(
      (0): Conv1d(67, 32, kernel_size=(4,), stride=(1,))
      (1): Conv1d(32, 64, kernel_size=(6,), stride=(1,))
      (2): Conv1d(64, 96, kernel_size=(8,), stride=(1,))
    )
    (fc1): Linear(in_features=96, out_features=128, bias=True)
  )
  (global_fc_nn): Sequential(
    (0): Linear(in_features=512, out_features=128, bias=True)
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Dropout(p=0.2, inplace=False)
    (3): ReLU()
    (4): Linear(in_features=128, out_features=32, bias=True)
    (5): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Dropout(p=0.2, inplace=False)
    (7): ReLU()
  )
  (fc2): Linear(in_features=32, out_features=1, bias=True)
)
in test dataloader...

tst:Ep0022|| F1: 0.709,auROC 0.805,auPRC: 0.799
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
       Test metric             DataLoader 0
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
        test_loss           0.7488327026367188
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
in test dataloader...
save prediction completed.
Command ran successfully!

============
job finished successfully
Job finished: 13/01/2024 18:14:40
